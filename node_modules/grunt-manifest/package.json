{
  "name": "grunt-manifest",
  "description": "Generate HTML5 Cache Manifest files",
  "version": "0.4.4",
  "homepage": "https://github.com/gunta/grunt-manifest",
  "author": {
    "name": "Gunther Brunner",
    "url": "http://gunta.org/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/gunta/grunt-manifest.git"
  },
  "bugs": {
    "url": "https://github.com/gunta/grunt-manifest/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/gunta/grunt-manifest/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.10.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "~0.4.5",
    "grunt-contrib-clean": "~0.6.0",
    "grunt-contrib-nodeunit": "~0.4.1",
    "grunt-contrib-jshint": "~0.10.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "contributors": [
    {
      "name": "Gunther Brunner",
      "url": "http://gunta.org"
    },
    {
      "name": "Saul Hardman",
      "url": "http://saulhardman.com"
    },
    {
      "name": "muxa"
    }
  ],
  "readme": "# grunt-manifest [![Build Status](https://travis-ci.org/gunta/grunt-manifest.png)](http://travis-ci.org/gunta/grunt-manifest)\n> Generate HTML5 Cache Manifest files. \n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.5`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-manifest --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-manifest');\n```\n\n\n\n### HTML5 Cache Manifest task\n\n_Run this task with the `grunt manifest` command._\n\nVisit the [Appcache Facts](http://appcache.offline.technology/) for more information on Cache Manifest files.\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\n\n\n### Parameters\n\n#### options \nType: `Object`  \nDefault: `{}`\n\n\nThis controls how this task (and its helpers) operate and should contain key:value pairs, see options below.\n\n#### src\nType: `String` `Array`  \nDefault: `undefined`   \n\nSets the input files.\n\n#### dest\nType: `String`\t\nDefault `manifest.appcache`\n\nSets the name of the Cache Manifest file.\t\nRemember that `.appcache` is now the W3C recommended file extension. \n\n### Options\n\n#### basePath\nType: `String`\t\nDefault: `undefined`\t\n\nSets the base path for **input files**. **_It's recommended to set this_**.\n\n#### cache\nType: `String`\t\nDefault: `undefined`\t\n\nAdds manually a string to the **CACHE** section. Needed when you have cache buster for example.\n\n#### process\nType: `Function`\nDefault: `undefined`\n\nA function to process src files path strings before adding them on the appcache\nmanifest.\n\n#### exclude\nType: `String` `Array`\t\nDefault: `undefined`\t\n\nExclude specific files from the Cache Manifest file.\n\n#### network\nType: `String` `Array`\t\nDefault: `\"*\"` (By default, an online whitelist wildcard flag is added)\t\t\n\nAdds a string to the **NETWORK** section.\n\nSee [here](http://diveintohtml5.info/offline.html#network) for more information.\n\n#### fallback\nType: `String` `Array`\t\nDefault: `undefined`\t\n\nAdds a string to the **FALLBACK** section.\n\nSee [here](http://diveintohtml5.info/offline.html#fallback) for more information.\n\n#### preferOnline\nType: `Boolean`\t\t\nDefault: `undefined`\n\nAdds a string to the **SETTINGS** section, specifically the cache mode flag of the ```prefer-online``` state.\n\nSee [here](http://www.whatwg.org/specs/web-apps/current-work/multipage/offline.html#concept-appcache-mode-prefer-online) for more information.\n\n#### headcomment\nType: `String`   \nDefault: `undefined` \n\nAdds ability to append custom text to the top of the manifest file. For example, you can put your app version, so that the manifest only updates when your app version changes. Note: A '#' is added to the beginning of the text for you. \n\n#### verbose\nType: `Boolean`\t\t\nDefault: `true`\t\n\nAdds a meta \"copyright\" comment.\n\n#### timestamp\nType: `Boolean`\t\t\nDefault: `true`\t\n\nAdds a timestamp as a comment for easy versioning.\n\nNote: timestamp will invalidate application cache whenever cache manifest is rebuilt, even if contents of files in `src` have not changed.\n\n#### hash\nType: `Boolean`\nDefault: `false`\n\nAdds a sha256 hash of all `src` files (actual contents) as a comment.\n\nThis will ensure that application cache invalidates whenever actual file contents change (it's recommented to set `timestamp` to `false` when `hash` is used).\n\n#### master\nType: `String` `Array`\nDefault: `undefined`\n\nHashes master html files (used with `hash`). Paths must be relative to the 'basePath'. This is useful when there are multiple html pages using one cache manifest and you don't want to explicitly include those pages in the manifest.\n\n### Config Example\n\n```js\n// Project configuration\ngrunt.initConfig({\n  pkg: grunt.file.readJSON('package.json'),\n  manifest: {\n    generate: {\n      options: {\n        basePath: '../',\n        cache: ['js/app.js', 'css/style.css'],\n        network: ['http://*', 'https://*'],\n        fallback: ['/ /offline.html'],\n        exclude: ['js/jquery.min.js'],\n        preferOnline: true,\n        headcomment: \" <%= pkg.name %> v<%= pkg.version %>\",\n        verbose: true,\n        timestamp: true,\n        hash: true,\n        master: ['index.html'],\n        process: function(path) {\n          return path.substring('build/'.length);\n        }\n      },\n      src: [\n      \t'build/some_files/*.html',\n    \t  'build/js/*.min.js',\n    \t  'build/css/*.css'\n      ],\n      dest: 'manifest.appcache'\n    }\n  }\n});\n```\n\n### Output example\n\n```\nCACHE MANIFEST\n# APPNAME v1.0.0\n# This manifest was generated by grunt-manifest HTML5 Cache Manifest Generator\n# Time: Mon Jan 01 2155 22:23:24 GMT+0900 (JST)\n\nCACHE:\njs/app.js\ncss/style\ncss/style.css\njs/zepto.min.js\njs/script.js\nsome_files/index.html\nsome_files/about.html\n\nNETWORK:\n*\n\n# hash: 76f0ef591f999871e1dbdf6d5064d1276d80846feeef6b556f74ad87b44ca16a\n```\n\nYou do need to be fully aware of standard browser caching.\nIf the files in **CACHE** are in the network cache, they won't actually update,\nsince the network cache will spit back the same file to the application cache.\nTherefore, it's recommended to add a hash to the filenames's, akin to rails or yeoman. See [here](http://www.stevesouders.com/blog/2008/08/23/revving-filenames-dont-use-querystring/) why query strings are not recommended.\n\n\n\n## Release History\n\n* 2015/01/26 - v0.4.1 - Documented process for renaming files.\n* 2012/10/23 - v0.4.0 - Changed package and repository name to grunt-manifest.\n* 2012/10/23 - v0.3.0 - Upgraded to Grunt 0.4. Fixed dependencies. Fixed basePath.    \n* 2012/10/23 - v0.2.1 - Added possibility to manually specify \"CACHE:\" files. Made comments optional.\n* 2012/09/28 - v0.2.0 - Refactored from grunt-contrib into individual repo.\n\n\n",
  "readmeFilename": "README.md",
  "_id": "grunt-manifest@0.4.4",
  "dist": {
    "shasum": "0a161f0b0dd9fbd7850d04e1e3ed098e53fd8fc6"
  },
  "_from": "grunt-manifest@~0.4.0",
  "_resolved": "https://registry.npmjs.org/grunt-manifest/-/grunt-manifest-0.4.4.tgz"
}
